package com {		import flash.display.MovieClip;	import com.bit101.components.*;
	import flash.events.Event;		public class ChillZoid extends MovieClip {				private var sustain:Knob;		private var speed:Knob;		private var depth:Knob;		private var amp:Knob;		private var _sustain:Number = 1;		private var _speed:Number = 0.1;		private var _depth:Number = 0.2;		private var _amp:Number = 0.6;				private var _mc:MovieClip;				public function set mc($mc:MovieClip):void {			_mc = $mc;		} 				public function ChillZoid() {			sustain = new Knob(this, 97, 26, "Sustain", _sustainChange);			sustain.minimum = 0;			sustain.maximum = 10;			sustain.value = _sustain;						speed = new Knob(this, 172, 26, "Speed", _speedChange);			speed.minimum = 0;			speed.maximum = 2000;			speed.value = _speed;						depth = new Knob(this, 135, 26, "Depth", _depthChange);			depth.minimum = 0;			depth.maximum = 2000;			depth.value = _depth;						amp = new Knob(this, 134, 196, "Gain", _gainChange);			amp.minimum = 0;			amp.maximum = 1;			amp.value = _amp;			amp.showValue = false;		}				public function init():void {			_mc.sustain1 = _sustain;			_mc.speed1 = _speed;			_mc.depth1 = _depth;			_mc.amp1 = _amp;		}				private function _sustainChange($e:Event):void {			//trace($e.target.value);			if( isNaN($e.target.value) ) { 				//trace("not a number");				_mc.sustain1 = _sustain;			} else {				_mc.sustain1 = $e.target.value;			}		}				private function _speedChange($e:Event):void {			if( isNaN($e.target.value) ) {				_mc.speed1 = _speed;			} else {				_mc.speed1 = $e.target.value;			}		}				private function _depthChange($e:Event):void {			if( isNaN($e.target.value) ) { 				_mc.depth1 = _depth;			} else {				_mc.depth1 = $e.target.value;			}		}				private function _gainChange($e:Event):void {			if( isNaN($e.target.value) ) { 				_mc.amp1 = _amp;			} else {				_mc.amp1 = $e.target.value;			}		}			}}